/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Lending, LendingInterface } from "../Lending";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyBorrowedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interestRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lentAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "setInterestRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506005600281905550610b18806100286000396000f3fe6080604052600436106100915760003560e01c8063727e6b2211610059578063727e6b22146101795780637c3a00fd146101a45780638e5084e9146101cf578063a2fb342d1461020c578063d0e30db01461023557610091565b806322867d781461009657806327e235e3146100bf5780632e1a7d4d146100fc5780634c738909146101255780635f84f30214610150575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b891906107fc565b61023f565b005b3480156100cb57600080fd5b506100e660048036038101906100e1919061083c565b610370565b6040516100f39190610878565b60405180910390f35b34801561010857600080fd5b50610123600480360381019061011e9190610893565b610388565b005b34801561013157600080fd5b5061013a6104a8565b6040516101479190610878565b60405180910390f35b34801561015c57600080fd5b5061017760048036038101906101729190610893565b6104ee565b005b34801561018557600080fd5b5061018e6104f8565b60405161019b9190610878565b60405180910390f35b3480156101b057600080fd5b506101b961053f565b6040516101c69190610878565b60405180910390f35b3480156101db57600080fd5b506101f660048036038101906101f1919061083c565b610545565b6040516102039190610878565b60405180910390f35b34801561021857600080fd5b50610233600480360381019061022e91906107fc565b61055d565b005b61023d61070c565b005b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156102c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b89061091d565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610310919061096c565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461036591906109a0565b925050819055505050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610409576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040090610a20565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610457919061096c565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156104a4573d6000803e3d6000fd5b5050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b8060028190555050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60025481565b60016020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590610a20565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461062c919061096c565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461068291906109a0565b92505081905550600060646002548361069b9190610a40565b6106a59190610ab1565b905080826106b391906109a0565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461070091906109a0565b92505081905550505050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461075a91906109a0565b92505081905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061079382610768565b9050919050565b6107a381610788565b81146107ae57600080fd5b50565b6000813590506107c08161079a565b92915050565b6000819050919050565b6107d9816107c6565b81146107e457600080fd5b50565b6000813590506107f6816107d0565b92915050565b6000806040838503121561081357610812610763565b5b6000610821858286016107b1565b9250506020610832858286016107e7565b9150509250929050565b60006020828403121561085257610851610763565b5b6000610860848285016107b1565b91505092915050565b610872816107c6565b82525050565b600060208201905061088d6000830184610869565b92915050565b6000602082840312156108a9576108a8610763565b5b60006108b7848285016107e7565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e7420616d6f756e7420746f20726570617900000000600082015250565b6000610907601c836108c0565b9150610912826108d1565b602082019050919050565b60006020820190508181036000830152610936816108fa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610977826107c6565b9150610982836107c6565b925082820390508181111561099a5761099961093d565b5b92915050565b60006109ab826107c6565b91506109b6836107c6565b92508282019050808211156109ce576109cd61093d565b5b92915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610a0a6014836108c0565b9150610a15826109d4565b602082019050919050565b60006020820190508181036000830152610a39816109fd565b9050919050565b6000610a4b826107c6565b9150610a56836107c6565b9250828202610a64816107c6565b91508282048414831517610a7b57610a7a61093d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610abc826107c6565b9150610ac7836107c6565b925082610ad757610ad6610a82565b5b82820490509291505056fea26469706673582212209cc60bf66d83eff49e73a7eef72c02ee44a7e4633ab3586e452499fea02c4a5a64736f6c63430008130033";

type LendingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lending__factory extends ContractFactory {
  constructor(...args: LendingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Lending & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Lending__factory {
    return super.connect(runner) as Lending__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingInterface {
    return new Interface(_abi) as LendingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Lending {
    return new Contract(address, _abi, runner) as unknown as Lending;
  }
}
