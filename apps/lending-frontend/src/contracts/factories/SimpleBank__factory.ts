/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { SimpleBank, SimpleBankInterface } from "../SimpleBank";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBankBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLoanAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "loan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "loans",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "repayLoan",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e2f806100606000396000f3fe6080604052600436106100915760003560e01c80637b83b50b116100595780637b83b50b1461017b5780638da5cb5b146101a6578063d0e30db0146101d1578063f4b01b18146101db578063f966ade71461020657610091565b806312065fe01461009657806327e235e3146100c1578063365a5306146100fe5780633ccfd60b1461012757806373b4086b1461013e575b600080fd5b3480156100a257600080fd5b506100ab610210565b6040516100b8919061096f565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e391906109ed565b610257565b6040516100f5919061096f565b60405180910390f35b34801561010a57600080fd5b5061012560048036038101906101209190610a46565b61026f565b005b34801561013357600080fd5b5061013c61046c565b005b34801561014a57600080fd5b50610165600480360381019061016091906109ed565b6105c3565b604051610172919061096f565b60405180910390f35b34801561018757600080fd5b506101906105db565b60405161019d919061096f565b60405180910390f35b3480156101b257600080fd5b506101bb6106d2565b6040516101c89190610a82565b60405180910390f35b6101d96106f6565b005b3480156101e757600080fd5b506101f061074e565b6040516101fd919061096f565b60405180910390f35b61020e610795565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60016020528060005260406000206000915090505481565b600081116102b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a990610b20565b60405180910390fd5b80600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034c90610bb2565b60405180910390fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103a49190610c01565b9250508190555080600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461041b9190610c35565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610468573d6000803e3d6000fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f190610cdb565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501580156105c0573d6000803e3d6000fd5b50565b60026020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461066c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066390610cdb565b60405180910390fd5b600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107459190610c01565b92505081905550565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080e90610d6d565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020543414610898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088f90610dd9565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555034600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461094d9190610c01565b92505081905550565b6000819050919050565b61096981610956565b82525050565b60006020820190506109846000830184610960565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109ba8261098f565b9050919050565b6109ca816109af565b81146109d557600080fd5b50565b6000813590506109e7816109c1565b92915050565b600060208284031215610a0357610a0261098a565b5b6000610a11848285016109d8565b91505092915050565b610a2381610956565b8114610a2e57600080fd5b50565b600081359050610a4081610a1a565b92915050565b600060208284031215610a5c57610a5b61098a565b5b6000610a6a84828501610a31565b91505092915050565b610a7c816109af565b82525050565b6000602082019050610a976000830184610a73565b92915050565b600082825260208201905092915050565b7f4c6f616e20616d6f756e742073686f756c64206265206772656174657220746860008201527f616e203000000000000000000000000000000000000000000000000000000000602082015250565b6000610b0a602483610a9d565b9150610b1582610aae565b604082019050919050565b60006020820190508181036000830152610b3981610afd565b9050919050565b7f42616e6b20646f6573206e6f7420686176652073756666696369656e7420667560008201527f6e64730000000000000000000000000000000000000000000000000000000000602082015250565b6000610b9c602383610a9d565b9150610ba782610b40565b604082019050919050565b60006020820190508181036000830152610bcb81610b8f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0c82610956565b9150610c1783610956565b9250828201905080821115610c2f57610c2e610bd2565b5b92915050565b6000610c4082610956565b9150610c4b83610956565b9250828203905081811115610c6357610c62610bd2565b5b92915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610cc5602183610a9d565b9150610cd082610c69565b604082019050919050565b60006020820190508181036000830152610cf481610cb8565b9050919050565b7f596f7520646f206e6f74206861766520616e206f75747374616e64696e67206c60008201527f6f616e0000000000000000000000000000000000000000000000000000000000602082015250565b6000610d57602383610a9d565b9150610d6282610cfb565b604082019050919050565b60006020820190508181036000830152610d8681610d4a565b9050919050565b7f4d75737420726570617920746865206578616374206c6f616e20616d6f756e74600082015250565b6000610dc3602083610a9d565b9150610dce82610d8d565b602082019050919050565b60006020820190508181036000830152610df281610db6565b905091905056fea264697066735822122089d23e173f01a9f1344c669064341b740f362d6de31e9d237a3d6ae20e935abb64736f6c63430008130033";

type SimpleBankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleBankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleBank__factory extends ContractFactory {
  constructor(...args: SimpleBankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleBank & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleBank__factory {
    return super.connect(runner) as SimpleBank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleBankInterface {
    return new Interface(_abi) as SimpleBankInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpleBank {
    return new Contract(address, _abi, runner) as unknown as SimpleBank;
  }
}
